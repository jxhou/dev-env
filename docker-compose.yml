version: '3'
volumes: 
  postgres:
  pgadmin:
services:
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
  #  networks:
  #    - postgres
    restart: unless-stopped
  # redis:
  #   image: 'redis:latest'
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
       - '3050:80'
  # API server
  api:
    build:
  #    dockerfile: Dockerfile
      dockerfile: Dockerfile.dev
      context: ../api-server
    ports:
      - 9229:9229
    volumes:
      - /app/node_modules
      - ../api-server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGHOST=postgres
      - PGUSER=${POSTGRES_USER:-postgres}
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
      - PGDATABASE=postgres
      - PGPORT=5432
  # Angular client
  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ../ContentExplorer
    volumes:
      - /app/node_modules
      - ../ContentExplorer:/app
    # ports: 
    #   - 4200:4200
  # worker:
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./worker
  #   volumes:
  #     - /app/node_modules
  #     - ./worker:/app
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
